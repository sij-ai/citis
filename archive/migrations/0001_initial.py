# Generated by Django 5.2.4 on 2025-07-06 22:07

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApiKey",
            fields=[
                (
                    "key",
                    models.CharField(
                        help_text="The actual API key string",
                        max_length=64,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable name for this API key", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description of what this key is used for",
                    ),
                ),
                (
                    "max_uses_total",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum total uses for this API key (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "max_uses_per_day",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum daily uses for this API key (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this API key is currently active",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this API key was created",
                    ),
                ),
                (
                    "last_used",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this API key was last used",
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who owns this API key",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API Key",
                "verbose_name_plural": "API Keys",
                "db_table": "archive_apikey",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Shortcode",
            fields=[
                (
                    "shortcode",
                    models.CharField(
                        help_text="The short identifier for this URL",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="The URL this shortcode redirects to", max_length=2000
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this shortcode was created",
                    ),
                ),
                (
                    "creator_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of the creator", null=True
                    ),
                ),
                (
                    "text_fragment",
                    models.TextField(
                        blank=True,
                        help_text="Text fragment to highlight in the archived page",
                    ),
                ),
                (
                    "archive_method",
                    models.CharField(
                        choices=[
                            ("archivebox", "ArchiveBox"),
                            ("singlefile", "SingleFile"),
                            ("both", "Both Methods"),
                        ],
                        default="singlefile",
                        help_text="Method used to archive this URL",
                        max_length=20,
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this URL has been successfully archived",
                    ),
                ),
                (
                    "archive_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to the archived content",
                        max_length=500,
                    ),
                ),
                (
                    "creator_api_key",
                    models.ForeignKey(
                        blank=True,
                        help_text="API key used to create this shortcode",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shortcodes",
                        to="archive.apikey",
                    ),
                ),
                (
                    "creator_user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this shortcode",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shortcodes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Shortcode",
                "verbose_name_plural": "Shortcodes",
                "db_table": "archive_shortcode",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "visited_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When this visit occurred",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of the visitor", null=True
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="User agent string of the visitor's browser",
                    ),
                ),
                (
                    "referer",
                    models.URLField(
                        blank=True,
                        help_text="Referer URL (where the visitor came from)",
                        max_length=2000,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Country of the visitor (derived from IP)",
                        max_length=100,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="City of the visitor (derived from IP)",
                        max_length=100,
                    ),
                ),
                (
                    "shortcode",
                    models.ForeignKey(
                        help_text="The shortcode that was visited",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visits",
                        to="archive.shortcode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Visit",
                "verbose_name_plural": "Visits",
                "db_table": "archive_visit",
                "ordering": ["-visited_at"],
            },
        ),
        migrations.AddIndex(
            model_name="shortcode",
            index=models.Index(
                fields=["created_at"], name="archive_sho_created_31886e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shortcode",
            index=models.Index(
                fields=["creator_user"], name="archive_sho_creator_ca61ad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shortcode",
            index=models.Index(
                fields=["creator_api_key"], name="archive_sho_creator_0939a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visit",
            index=models.Index(
                fields=["shortcode", "visited_at"],
                name="archive_vis_shortco_b6afac_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="visit",
            index=models.Index(
                fields=["visited_at"], name="archive_vis_visited_f92534_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="visit",
            index=models.Index(
                fields=["ip_address"], name="archive_vis_ip_addr_ab7698_idx"
            ),
        ),
    ]
